
source_set("render2d") {
  sources = [
    "canvas2d.cc",
    "canvas2d.h",
    "canvas2d_software.cc",
    "canvas2d_software.h",
    "context2d.cc",
    "context2d.h",
    "context2d_software.cc",
    "context2d_software.h",
  ]
  deps = [
   "//skia",
  ]

  configs += ["//azer/build/config:utf8src"]
  configs += ["//azer/base:build_render_config"]
  visibility = ["//azer"]
}

source_set("render") {
  sources = [
    "axis_aligned_box.cc",
    "axis_aligned_box.h",
    "blending.h",
    "camera.cc",
    "camera.h",
    "effect.cc",
    "effect.h",
    "effect_params_provider.cc",
    "effect_params_provider.h",
    "frame_args.cc",
    "frame_args.h",
    "frustrum.cc",
    "frustrum.h",
    "gpu_constants_table.cc",
    "gpu_constants_table.h",
    "gpu_program.cc",
    "gpu_program.h",
    "hardware_buffer.h",
    "hierarchy_transform.h",
    "indices_buffer.cc",
    "indices_buffer.h",
    "light.cc",
    "light.h",
    "material.cc",
    "material.h",
    "movable.cc",
    "movable.h",
    "overlay.cc",
    "overlay.h",
    "render_system.h",
    "render_system.cc",
    "render_system_loader.cc",
    "render_system_loader.h",
    "render_system_observer.cc",
    "render_system_observer.h",
    "render_target.h",
    "render_system_enum.cc",
    "render_system_enum.h",
    "renderable_object.cc",
    "renderable_object.h",
    "reusable_object.cc",
    "reusable_object.h",
    "reusable_object_util.cc",
    "reusable_object_util.h",
    "transform_holder.cc",
    "transform_holder.h",
    "sky.cc",
    "sky.h",
    "swap_chain.h",
    "technique.cc",
    "technique.h",
    "texture.cc",
    "texture.h",
    "vertex_buffer.cc",
    "vertex_buffer.h",
  ]

  if (is_win) {
    sources += [
      "surface_win.cc",
    ]
  }

  deps = [
    "//azer/math",
    "//base",
    "//ui/events",
    "//ui/events/platform",
    "//ui/events:events_base",
    "//ui/gl",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//ui/views",    
  ]

  configs += ["//azer/build/config:utf8src"]
  configs += ["//azer/base:build_render_config"]
  forward_dependent_configs_from = deps
  visibility = ["//azer"]
}

source_set("unittests") {
  sources = [
    "../base/tree_node_unittest.cc",
    "test/camera_unittest.cc",
    "test/frustrum_unittest.cc",
    "test/gpu_constants_table_unittest.cc",
    "test/vertex_data_unittest.cc",
    "test/util.cc",
    "test/util.h",
  ]

  defines = ["AZER_UNITTEST"]
  deps = [
    "//azer/math",
    "//azer/third_party/glm:glm",
    "//testing/gtest",
    "//azer",
  ]

  if (is_win) {deps += ["//azer/render_system/d3d11"]}
  configs += ["//azer/build/config:utf8src"]
  visibility = ["//azer:unittests"]
}
