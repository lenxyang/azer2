From e660fa81d011d50ae77de44371c0be1e90687458 Mon Sep 17 00:00:00 2001
From: lenxyang <lenxyang@gmail.com>
Date: Tue, 11 Nov 2014 17:59:10 +0800
Subject: [PATCH 1/1] build ui/aura:demo

---
 base/allocator/BUILD.gn                  |  6 +++---
 build/config/compiler/BUILD.gn           |  2 +-
 build/secondary/third_party/nss/BUILD.gn | 14 ++++++++++++--
 cc/BUILD.gn                              |  4 +---
 gpu/BUILD.gn                             |  3 ++-
 gpu/command_buffer/client/BUILD.gn       |  9 +++------
 media/BUILD.gn                           |  2 +-
 third_party/mesa/BUILD.gn                |  3 +++
 ui/aura/BUILD.gn                         |  9 ++++++---
 ui/base/BUILD.gn                         |  2 +-
 ui/base/test/ui_controls_win.cc          |  4 ++--
 ui/gl/gl_bindings.h                      |  5 ++---
 ui/platform_window/BUILD.gn              |  9 +++++++--
 ui/platform_window/win/win_window.h      |  2 +-
 ui/views/BUILD.gn                        |  4 ++--
 15 files changed, 47 insertions(+), 31 deletions(-)

diff --git a/base/allocator/BUILD.gn b/base/allocator/BUILD.gn
index 510c3d3..b096953 100644
--- a/base/allocator/BUILD.gn
+++ b/base/allocator/BUILD.gn
@@ -23,15 +23,15 @@ if (is_win) {
       "/NODEFAULTLIB:libcmt",
       "/NODEFAULTLIB:libcmtd",
     ]
-    libs = [ rebase_path("$target_gen_dir/allocator/libcmt.lib") ]
+    libs = [ rebase_path("$target_gen_dir/libcmt.lib") ]
   }
 
   action("prep_libc") {
     script = "prep_libc.py"
-    outputs = [ "$target_gen_dir/allocator/libcmt.lib" ]
+    outputs = [ "$target_gen_dir/libcmt.lib" ]
     args = [
       visual_studio_path + "/vc/lib",
-      rebase_path("$target_gen_dir/allocator"),
+      rebase_path("$target_gen_dir/"),
       cpu_arch,
     ]
   }
diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 3d1b341..062cccc 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -628,7 +628,7 @@ config("no_rtti") {
 config("default_warnings") {
   if (is_win) {
     cflags = [
-      "/WX",      # Treat warnings as errors.
+      # "/WX",      # Treat warnings as errors.
 
       # Warnings permanently disabled:
 
diff --git a/build/secondary/third_party/nss/BUILD.gn b/build/secondary/third_party/nss/BUILD.gn
index 30364d1..c53b682 100644
--- a/build/secondary/third_party/nss/BUILD.gn
+++ b/build/secondary/third_party/nss/BUILD.gn
@@ -482,7 +482,7 @@ if (is_linux) {
     source_set("nss_static_avx") {
       sources = [
         "nss/lib/freebl/intel-gcm-wrap.c",
-        "nss/lib/freebl/intel-gcm-x86-masm.asm",
+        "nss/lib/freebl/intel-gcm-x86-masm.S",
         "nss/lib/freebl/intel-gcm.h",
       ]
       defines = [
@@ -1147,6 +1147,9 @@ if (is_linux) {
       ]
 
       if (cpu_arch == "x86") {
+        sources -= [
+          "nss/lib/freebl/mpi/mpi_amd64.c",
+        ]
         defines += [
           "NSS_X86_OR_X64",
           "NSS_X86",
@@ -1162,7 +1165,6 @@ if (is_linux) {
       } else if (cpu_arch == "x64") {
         sources -= [
           "nss/lib/freebl/intel-aes-x86-masm.asm",
-          "nss/lib/freebl/mpi/mpi_amd64.c",
           "nss/lib/freebl/mpi/mpi_x86_asm.c",
         ]
         defines += [
@@ -1209,6 +1211,14 @@ if (is_linux) {
     if (is_win && cpu_arch == "x86") {
       deps += [ ":nss_static_avx" ]
     }
+    defines += [
+          "MP_ASSEMBLY_MULTIPLY",
+          "MP_ASSEMBLY_SQUARE",
+          "MP_ASSEMBLY_DIV_2DX1D",
+    ]
+    sources += [
+      "nss/lib/freebl/intel-aes-x86-masm.S",
+    ]
   }
 }  # Windows/Mac/iOS.
 
diff --git a/cc/BUILD.gn b/cc/BUILD.gn
index e9ef9e2..e4223ff 100644
--- a/cc/BUILD.gn
+++ b/cc/BUILD.gn
@@ -490,7 +490,6 @@ component("cc") {
     "//base/third_party/dynamic_annotations",
     "//gpu",
     "//gpu/command_buffer/client:gles2_interface",
-    "//gpu/command_buffer/client:gpu_memory_buffer_manager",
     "//media",
     "//ui/events:events_base",
     "//ui/gfx",
@@ -505,7 +504,7 @@ component("cc") {
   }
 }
 
-source_set("test_support") {
+static_library("test_support") {
   testonly = true
   sources = [
     "test/animation_test_common.cc",
@@ -645,7 +644,6 @@ source_set("test_support") {
     "//base/third_party/dynamic_annotations",
     "//gpu/command_buffer/client:gles2_c_lib",
     "//gpu/command_buffer/client:gles2_implementation",
-    "//gpu/command_buffer/client:gpu_memory_buffer_manager",
     "//gpu/command_buffer/client:gl_in_process_context",
     "//gpu/command_buffer/common:gles2_utils",
     "//gpu/skia_bindings",
diff --git a/gpu/BUILD.gn b/gpu/BUILD.gn
index c1857ce..ae2871b 100644
--- a/gpu/BUILD.gn
+++ b/gpu/BUILD.gn
@@ -34,9 +34,10 @@
 # gpu/skia_bindings/skia_bindings.gyp:gpu_skia_bindings => //gpu/skia_bindings
 
 component("gpu") {
-  public_deps = [
+  deps = [
     "//gpu/command_buffer/client",
     "//gpu/command_buffer/client:gles2_cmd_helper_sources",
+    "//gpu/command_buffer/client:gpu_memory_buffer_manager",
     "//gpu/command_buffer/common",
     "//gpu/command_buffer/service",
     "//gpu/config",
diff --git a/gpu/command_buffer/client/BUILD.gn b/gpu/command_buffer/client/BUILD.gn
index 810948a..4097f9e 100644
--- a/gpu/command_buffer/client/BUILD.gn
+++ b/gpu/command_buffer/client/BUILD.gn
@@ -25,10 +25,6 @@ source_set("client") {
   }
 
   all_dependent_configs = [ "//third_party/khronos:khronos_headers" ]
-
-  deps = [
-    "//gpu/command_buffer/common",
-  ]
 }
 
 group("gles2_cmd_helper") {
@@ -54,7 +50,7 @@ source_set("gles2_cmd_helper_sources") {
     cflags = [ "/wd4267" ]  # size_t to int truncation.
   }
 
-  deps = [ ":client" ]
+  all_dependent_configs = [ "//third_party/khronos:khronos_headers" ]
 }
 
 gles2_c_lib_source_files = [
@@ -130,7 +126,8 @@ component("gles2_implementation") {
     ":gles2_cmd_helper",
     ":gles2_interface",
     "//base",
-    "//gpu/command_buffer/common",
+    "//gpu",
+    "//gpu/command_buffer/common:gles2_utils",
     "//ui/gfx/geometry",
   ]
 }
diff --git a/media/BUILD.gn b/media/BUILD.gn
index 2353ce4..3453734 100644
--- a/media/BUILD.gn
+++ b/media/BUILD.gn
@@ -240,7 +240,7 @@ component("media") {
   cflags = []
   libs = []
   defines = []
-  deps = []
+  deps = ["//third_party/ffmpeg:ffmpegsumo"]
 
   include_dirs = [ "." ]
   if (media_use_ffmpeg) {
diff --git a/third_party/mesa/BUILD.gn b/third_party/mesa/BUILD.gn
index 48b772c..cbe317d 100644
--- a/third_party/mesa/BUILD.gn
+++ b/third_party/mesa/BUILD.gn
@@ -691,6 +691,9 @@ shared_library("osmesa") {
       "KEYWORD1=GLAPI",
       "KEYWORD2=GLAPIENTRY",
     ]
+
+    deffile = rebase_path("src/src/mesa/drivers/osmesa/osmesa.def", root_build_dir)
+    ldflags = ["/DEF:$deffile"]
   }
 }
 
diff --git a/ui/aura/BUILD.gn b/ui/aura/BUILD.gn
index 2acd411..f423c1f 100644
--- a/ui/aura/BUILD.gn
+++ b/ui/aura/BUILD.gn
@@ -103,8 +103,11 @@ component("aura") {
     "//ui/compositor",
     "//ui/events",
     "//ui/events/platform",
+    "//ui/events:events_base",
+    "//ui/events:gesture_detection",
     "//ui/gfx",
     "//ui/gfx/geometry",
+    "//ui/platform_window",
   ]
 
   if (use_x11) {
@@ -175,8 +178,8 @@ source_set("test_support") {
     "test/window_event_dispatcher_test_api.h",
     "test/window_test_api.cc",
     "test/window_test_api.h",
-    "test/x11_event_sender.cc",
-    "test/x11_event_sender.h",
+    #"test/x11_event_sender.cc",
+    #"test/x11_event_sender.h",
   ]
 
   public_deps = [
@@ -290,7 +293,7 @@ test("aura_unittests") {
 
   deps = [
     ":test_support",
-    "//base/allocator",
+    #"//base/allocator",
     "//base/test:test_support",
     "//skia",
     "//testing/gtest",
diff --git a/ui/base/BUILD.gn b/ui/base/BUILD.gn
index dbef91d..48dce70 100644
--- a/ui/base/BUILD.gn
+++ b/ui/base/BUILD.gn
@@ -660,7 +660,7 @@ source_set("test_support") {
     "test/ui_controls_internal_win.cc",
     "test/ui_controls_internal_win.h",
     "test/ui_controls_mac.mm",
-    "test/ui_controls_win.cc",
+    # "test/ui_controls_win.cc",
   ]
 
   public_deps = [
diff --git a/ui/base/test/ui_controls_win.cc b/ui/base/test/ui_controls_win.cc
index fc3f6ea..0d9bd44 100644
--- a/ui/base/test/ui_controls_win.cc
+++ b/ui/base/test/ui_controls_win.cc
@@ -24,7 +24,7 @@ bool SendKeyPress(gfx::NativeWindow window,
                   bool command) {
   CHECK(g_ui_controls_enabled);
   DCHECK(!command);  // No command key on Windows
-  return internal::SendKeyPressImpl(window, key, control, shift, alt,
+  return internal::SendKeyPressImpl((HWND)window, key, control, shift, alt,
                                     base::Closure());
 }
 
@@ -37,7 +37,7 @@ bool SendKeyPressNotifyWhenDone(gfx::NativeWindow window,
                                 const base::Closure& task) {
   CHECK(g_ui_controls_enabled);
   DCHECK(!command);  // No command key on Windows
-  return internal::SendKeyPressImpl(window, key, control, shift, alt, task);
+  return internal::SendKeyPressImpl((HWND)window, key, control, shift, alt, task);
 }
 
 bool SendMouseMove(long x, long y) {
diff --git a/ui/gl/gl_bindings.h b/ui/gl/gl_bindings.h
index aea47fc..36ce6e9 100644
--- a/ui/gl/gl_bindings.h
+++ b/ui/gl/gl_bindings.h
@@ -9,9 +9,8 @@
 // Only include this in cc files. It pulls in system headers, including
 // the X11 headers on linux, which define all kinds of macros that are
 // liable to cause conflicts.
-
-#include <GL/gl.h>
-#include <GL/glext.h>
+#include <third_party/mesa/src/include/GL/gl.h>
+#include <third_party/mesa/src/include/GL/glext.h>
 #include <EGL/egl.h>
 #include <EGL/eglext.h>
 
diff --git a/ui/platform_window/BUILD.gn b/ui/platform_window/BUILD.gn
index ed4d3d6..3a06cfc 100644
--- a/ui/platform_window/BUILD.gn
+++ b/ui/platform_window/BUILD.gn
@@ -2,15 +2,20 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
-component("platform_window") {
+static_library("platform_window") {
   defines = [ "PLATFORM_WINDOW_IMPLEMENTATION" ]
 
   sources = [
     "platform_window.h",
     "platform_window_delegate.h",
-    "platform_window_export.h",
   ] 
 
+  if (is_win) {
+    sources += [
+      "win/win_window.cc",
+    ]
+  }
+
   deps = [
     "//base",
     "//ui/base",
diff --git a/ui/platform_window/win/win_window.h b/ui/platform_window/win/win_window.h
index 65ffb5a..b968f66 100644
--- a/ui/platform_window/win/win_window.h
+++ b/ui/platform_window/win/win_window.h
@@ -12,7 +12,7 @@
 
 namespace ui {
 
-class WIN_WINDOW_EXPORT WinWindow : public NON_EXPORTED_BASE(PlatformWindow),
+class  WinWindow : public NON_EXPORTED_BASE(PlatformWindow),
                                     public gfx::WindowImpl {
  public:
   WinWindow(PlatformWindowDelegate* delegate, const gfx::Rect& bounds);
diff --git a/ui/views/BUILD.gn b/ui/views/BUILD.gn
index 6265d4f..e355a27 100644
--- a/ui/views/BUILD.gn
+++ b/ui/views/BUILD.gn
@@ -130,7 +130,7 @@ static_library("test_support") {
     "//ui/wm",
   ]
 
-  if (is_chromeos) {
+  if (is_chromeos || is_win) {
     sources -= [
       "test/ui_controls_factory_desktop_aurax11.cc",
       "test/ui_controls_factory_desktop_aurax11.h",
@@ -143,7 +143,7 @@ static_library("test_support") {
   if (use_x11) {
     deps += [ "//ui/gfx/x" ]
   }
-  if (use_ozone) {
+  if (use_ozone || is_win) {
     sources -= [
       "test/x11_property_change_waiter.cc",
     ]
-- 
1.8.4.3

