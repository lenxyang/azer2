
source_set("views") {
  sources = [
    "accessibility/native_view_accessibility.cc",
    "accessibility/native_view_accessibility.h",
    "adapter/window_owner.cc",
    "adapter/window_owner.h",
    "background.cc",
    "background.h",
    "cull_set.cc",
    "cull_set.h",
    "layout/box_layout.cc",
    "layout/box_layout.h",
    "layout/fill_layout.cc",
    "layout/fill_layout.h",
    "layout/grid_layout.cc",
    "layout/grid_layout.h",
    "layout/layout_manager.cc",
    "layout/layout_manager.h",
    "painter.cc",
    "painter.h",
    "widget/root_view.cc",
    "widget/root_view.h",
    "widget/widget.cc",
    "widget/widget.h",
    "widget/aura/focus_client.cc",
    "widget/aura/focus_client.h",
    "view.cc",
    "view.h",
    "view_export.h",
    "util/init.cc",
    "util/init.h",
    "util/aura_screen.cc",
    "util/aura_screen.h",
  ]
  defines = [
    "AURA_IMPLEMENTATION",
    "COMPOSITOR_IMPLEMENTATION",
    "VIEWS_IMPLEMENTATION",
  ]

  deps = [
    "//base:i18n",
    "//base/third_party/dynamic_annotations",
    "//skia",
    "//third_party/icu",
    "//ui/accessibility",
    "//ui/native_theme",
    "//ui/events",
    "//ui/resources",
    "//ui/strings",
    "//ui/wm",
    "//url",
  ]
}

executable("demo") {
  output_name = "aui_views_demo"
  sources = [
    "demo/main.cc",
  ]
  deps = [
    "//azer/ui",
    "//azer/render",
    "//base",
    "//ui/gfx",
    "//ui/gfx/geometry",
  ]
}

test("views_unittests") {
  output_name = "azer_views_unittests"
  sources = [
#   "ime/input_method_bridge_unittest.cc",
#   "layout/box_layout_unittest.cc",
#   "layout/grid_layout_unittest.cc",
    "test/views_test_base.cc",
    "test/views_test_base.h",
    "test/run_all_unittests.cc",
    "view_unittest.cc",
  ]

  deps = [
    "//azer/render",
    "//azer/ui",
    "//base",
    "//base/test:test_support",
    "//skia",
    "//testing/gtest",
    "//ui/base:test_support",
    "//ui/events:test_support",
    "//ui/events:gesture_detection",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//ui/gl",
  ]
}